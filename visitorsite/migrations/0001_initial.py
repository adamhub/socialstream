# Generated by Django 3.2.2 on 2021-07-06 16:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Embed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=500, verbose_name='slug')),
                ('width', models.CharField(blank=True, default=800, help_text="Only for link embeds(specify the width of embed code from ir's attributes)", max_length=20, null=True, verbose_name='width')),
                ('link', models.CharField(blank=True, help_text='example: https://youtube.com/something', max_length=1500, null=True, verbose_name='Link Address of the Embed')),
                ('embed_code', models.TextField(blank=True, help_text='copy the embed code from your server and Past it here, if you use this field, the previous field will be ignored during template rendition', max_length=10000, null=True, verbose_name='embed code')),
                ('description', models.TextField(blank=True, max_length=10000, null=True, verbose_name='About this link/video')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Page Title')),
                ('slug', models.SlugField(allow_unicode=True, help_text='The name of the page as it will appear in URLs e.g http://domain.com/blog/[my-slug]/', max_length=255, verbose_name='slug')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'UnPublished'), (2, 'Published')], default=0)),
                ('seo_title', models.CharField(blank=True, help_text='The name of the page displayed on search engine results as the clickable headline.', max_length=255, verbose_name='SEO title tag')),
                ('seo_description', models.TextField(blank=True, help_text='The descriptive text displayed underneath a headline in search engine results.', verbose_name='SEO meta description')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pages', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='visitorsite.page')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Blog Pgae Header Image')),
            ],
            bases=('visitorsite.page',),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salutation', models.CharField(max_length=10)),
                ('headshot', models.ImageField(upload_to='authors_headshot')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_posts', to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='visitorsite.page')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Internal Header Image')),
                ('external_image', models.CharField(blank=True, help_text='From external link', max_length=150, null=True, verbose_name='External Header Image')),
                ('cat', models.IntegerField(choices=[(0, 'Standard Post Page'), (1, 'Video Post Page'), (2, 'Image Post Page'), (3, 'News Post Page')], default=0)),
                ('body', models.TextField(blank=True, max_length=10000, verbose_name='Main content section ')),
                ('date_published', models.DateField(blank=True, null=True, verbose_name='Date article published')),
                ('blog_page', models.ForeignKey(blank=True, help_text="Blog Page that this post will be residing in it's listing", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pages', to='visitorsite.blog', verbose_name='Blog Page')),
                ('embed_file', models.ForeignKey(blank=True, help_text='PLease select or create an embed object', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='embeded_video', to='visitorsite.embed', verbose_name='Embeded Video')),
            ],
            bases=('visitorsite.page',),
        ),
    ]
